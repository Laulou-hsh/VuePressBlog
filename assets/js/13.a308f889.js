(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{453:function(e,s,a){},497:function(e,s,a){"use strict";a(453)},528:function(e,s,a){"use strict";a.r(s);a(497);var t=a(6),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_2020年12月23日的更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2020年12月23日的更新"}},[e._v("#")]),e._v(" 2020年12月23日的更新")]),e._v(" "),a("blockquote",[a("p",[e._v("本文转载和摘抄于编程学习网的文章"),a("a",{attrs:{href:"http://www.shaoqun.com/a/493108.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("8个常用的JavaScript数组方法"),a("OutboundLink")],1),e._v("，著作权属原作者所有，本人除了学习和参考之外，不对此进行任何商业行为，且如有侵权必删。")])]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("数组（Array）是JavaScript中内置的全局对象，在构建诸如商品列表等组件（Component）时，时常用到。除了常见的 "),a("code",[e._v("push")]),e._v("、 "),a("code",[e._v("pop")]),e._v("、"),a("code",[e._v("indexOf")]),e._v(" 等方法，JS还提供了一些诸如过滤、规约等流处理方法，非常类似于Java的 "),a("code",[e._v("Stream")]),e._v(" 库。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("const students = [\n    { name: 'Alice', score: 100 },\n    { name: 'Bob', score: 90 },\n    { name: 'Trunp', score: 80 },\n    { name: 'Biden', score: 70 },\n    { name: 'Joe', score: 60 },\n    { name: 'Sunshine', score: 50 },\n    { name: 'Elon', score: 40 },\n    { name: 'Jack', score: 30 },\n];\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"_1、filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、filter"}},[e._v("#")]),e._v(" "),a("strong",[e._v("1、filter")])]),e._v(" "),a("p",[e._v("过滤方法，返回符合条件的元素。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//返回成绩大于75的高分学生\nconst highScores = students.filter(stu => stu.score >75);\nconsole.log(highScores);\n")])])]),a("p",[e._v("结果：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("[\n    { name: 'Alice', score: 100 },\n    { name: 'Bob', score: 90 },\n    { name: 'Trunp', score: 80 }\n]\n")])])]),a("p",[e._v("更好的是，由于const类型的值，都是不可变量，因此这些操作的返回的都是一个新对象，并不会影响到原值。")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_2、map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、map"}},[e._v("#")]),e._v(" "),a("strong",[e._v("2、map")])]),e._v(" "),a("p",[e._v("将数组内的item转化成另一种对象，类似于Java的Fucntion<T,R>接口。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//返回全部对象的name属性\nconst names = students.map(stu => stu.name);\nconsole.log(names);\n")])])]),a("p",[e._v("结果：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("[ 'Alice','Bob', 'Trunp','Biden','Joe', 'Sunshine','Elon','Jack']\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"_3、find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、find"}},[e._v("#")]),e._v(" "),a("strong",[e._v("3、find")])]),e._v(" "),a("p",[e._v("类似于filter方法，但返回第一个符合条件的元素。filter返回一个数组，find返回一个object。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//返回name长度为4的第一个对象\nconst foundedOne = students.find(stu=>stu.name.length === 4)    ;\nconsole.log(foundedOne);\n")])])]),a("p",[e._v("结果：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("{ name: 'Elon', score: 40 }\n")])])]),a("p",[e._v("由结果可见，虽然Elon和Jack都符合条件，但只返回了Elon。")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_4、foreach"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、foreach"}},[e._v("#")]),e._v(" "),a("strong",[e._v("4、forEach")])]),e._v(" "),a("p",[e._v("遍历数组内全部元素。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//打印元素\nstudents.forEach(item=>console.log(`stu-name=${item.name},stu-score=${item.score}`));\n")])])]),a("p",[e._v("结果：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("stu-name=Alice,stu-score=100\nstu-name=Bob,stu-score=90\nstu-name=Trunp,stu-score=80\nstu-name=Biden,stu-score=70\nstu-name=Joe,stu-score=60\nstu-name=Sunshine,stu-score=50\nstu-name=Elon,stu-score=40\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"_5、some"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、some"}},[e._v("#")]),e._v(" "),a("strong",[e._v("5、some")])]),e._v(" "),a("p",[e._v("当数组中有一个符合条件，则返回true，否则返回false。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//是否至少有一个name为Jack的\nconst isSome = students.some(item=>item.name === 'Jack');\nconsole.log(isSome);\n")])])]),a("p",[e._v("结果：true")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_6、every"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、every"}},[e._v("#")]),e._v(" "),a("strong",[e._v("6、every")])]),e._v(" "),a("p",[e._v("功能类似于some，但要求每一个元素都符合条件才返回true。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//是否score都大于70\nconst isEvery = students.every(item=>item.score > 70);\nconsole.log(isEvery);\n")])])]),a("p",[e._v("结果：false")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_7、reduce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、reduce"}},[e._v("#")]),e._v(" "),a("strong",[e._v("7、reduce")])]),e._v(" "),a("p",[e._v("规约函数。在MDN中给出的API可以简化为，reduce(callback(accumulator,current),initValue)。"),a("br"),e._v("\n它有两个参数，第一个是回调函数，第二个initValue是初始值，可选的。"),a("br"),e._v("\ncurrent表示数组内的元素，即当前值。")]),e._v(" "),a("p",[e._v("值得一说的是accumulator这个参数，它是中间态的值，一个累加器。"),a("br"),e._v("\n换句话数，reduce函数是有状态的，即非纯函数，在多线程执行的时候，需要做一致性处理，否则可能会得到意外值。")]),e._v(" "),a("p",[e._v("当然JavaScript是单线程执行的，所以可不考虑，但是用到类似于Java的语言中则需小心。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//求取全部score之和\nconst result = students.reduce(\n    (accumulator, current) => accumulator + current.score,\n    0\n);\nconsole.log(result);\n")])])]),a("p",[e._v("以上函数中，我们通过accumulator加上每一个元素值，获得最终结果。")]),e._v(" "),a("p",[e._v("结果：520。")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_8、includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、includes"}},[e._v("#")]),e._v(" "),a("strong",[e._v("8、includes")])]),e._v(" "),a("p",[e._v("是否包含指定的元素值。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("const isIncludes = students.includes({ name: 'Jack', score: 30 });\nconsole.log(isIncludes);\n")])])]),a("p",[e._v("结果：false。")]),e._v(" "),a("p",[e._v("虽然提供了和最后一个元素的一摸一样的{name: 'Jack', score: 30}，但仍然返回false，说明两个对象不是指向同一个引用。")]),e._v(" "),a("p",[e._v("以上，都是很实用的方法，他们使得原来需要很多语句才能做的事情，通过一个简单的调用，即可得出结果。")]),e._v(" "),a("p",[e._v("本文完。")])])}),[],!1,null,null,null);s.default=n.exports}}]);